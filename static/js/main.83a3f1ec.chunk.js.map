{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","map","option","FinalOption","toUpperCase","substring","type","id","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleOnButtonClick","event","key","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAgBeA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIC,UAAU,gBAAd,SAA+BF,IAC9BC,MCuBUE,G,MA1BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIH,UAAU,oBAAd,SACGE,EAAQE,KAAI,SAAAC,GACX,IAAMC,EAAcD,EAAO,GAAGE,cAAgBF,EAAOG,UAAU,GAE/D,OACE,oBAAIR,UAAU,yBAAd,SACE,wBACEA,UAAU,eACVS,KAAK,SACLC,GAAIL,EACJM,QAASR,EAJX,SAMGG,KAPuCD,UCArCO,G,MANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGb,UAAU,UAAb,SAAwBa,MC4B/CC,G,MA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAInB,UAAU,mBAAd,wBAEW,IAAVkB,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,qCACE,oBAAGb,UAAU,kBAAb,mBAAsCe,KACtC,oBAAGf,UAAU,kBAAb,sBAAyCgB,KACzC,oBAAGhB,UAAU,kBAAb,kBAAqCiB,KACrC,oBAAGjB,UAAU,kBAAb,oBAAuCkB,KACvC,oBAAGlB,UAAU,kBAAb,gCACsBmB,EADtB,eCwCOC,E,4MAlDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,oBAAsB,SAAAC,GACpB,IAAMC,EAAMD,EAAME,OAAOf,GAEzB,EAAKgB,UAAS,SAAAC,GAAS,sBACpBH,EAAMG,EAAUH,GAAO,O,EAI5BI,mBAAqB,WACnB,MAA+B,EAAKP,MAEpC,OAFA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBY,gCAAkC,WAChC,IAAQd,EAAS,EAAKM,MAAdN,KAER,OAAOe,KAAKC,MAAOhB,EAAO,EAAKa,qBAAwB,M,4CAGzD,WACE,MAA+BI,KAAKX,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgB,EAAgBD,KAAKJ,qBACrBM,EAA6BF,KAAKH,kCAExC,OACE,eAAC,EAAD,CAAS/B,MAAM,wBAAf,UACA,cAAC,EAAD,CACAI,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB6B,KAAKV,sBAGtB,cAAC,EAAD,CACIP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPd,mBAAoBe,W,GA5CZC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83a3f1ec.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport './Section.css';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h1 className=\"section-title\">{title}</h1>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport './FeedbackOptions.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className=\"feedback-btn-list\">\n    {options.map(option => {\n      const FinalOption = option[0].toUpperCase() + option.substring(1);\n\n      return (\n        <li className=\"feedback-btn-list-item\" key={option}>\n          <button\n            className=\"feedback-btn\"\n            type=\"button\"\n            id={option}\n            onClick={onLeaveFeedback}\n          >\n            {FinalOption}\n          </button>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\n\nimport './Notification.css';\n\nconst Notification = ({ message }) => <p className=\"message\">{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import PropTypes from 'prop-types';\nimport Notification from '../Notification'; \nimport './Statistics.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <h2 className=\"statistics-title\">Statistics</h2>\n\n    {total === 0 ? (\n      <Notification message=\"No feedback given\" />\n    ) : (\n      <>\n        <p className=\"statistics-item\">Good: {good}</p>\n        <p className=\"statistics-item\">Neutral: {neutral}</p>\n        <p className=\"statistics-item\">Bad: {bad}</p>\n        <p className=\"statistics-item\">Total: {total}</p>\n        <p className=\"statistics-item\">\n          Positive feedback: {positivePercentage}%\n        </p>\n      </>\n    )}\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;","import { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleOnButtonClick = event => {\n    const key = event.target.id;\n\n    this.setState(prevState => ({\n      [key]: prevState[key] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    return Math.round((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Section title=\"Please leave feedback\">\n      <FeedbackOptions\n      options={['good', 'neutral', 'bad']}\n      onLeaveFeedback={this.handleOnButtonClick}\n        />\n\n      <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={totalFeedback}\n          positivePercentage={positiveFeedbackPercentage}\n        />\n      </Section>   \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}